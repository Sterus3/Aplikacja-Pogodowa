{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pacan\\\\Desktop\\\\frontend\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport CityList from './components/CityList';\nimport WeatherDetails from './components/WeatherDetails';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cities, setCities] = useState(['Warszawa', 'Kraków', 'Gdańsk', 'Wrocław', 'Poznań']);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [temperatureUnit, setTemperatureUnit] = useState(localStorage.getItem('temperatureUnit') || 'metric');\n  const [favoriteCities, setFavoriteCities] = useState(JSON.parse(localStorage.getItem('favoriteCities')) || []);\n\n  // Funkcja do dodawania ulubionych miast\n  const addFavoriteCity = city => {\n    const updatedCities = [...favoriteCities, city];\n    setFavoriteCities(updatedCities);\n    localStorage.setItem('favoriteCities', JSON.stringify(updatedCities));\n  };\n\n  // Funkcja do zmiany jednostek temperatury\n  const toggleTemperatureUnit = () => {\n    const newUnit = temperatureUnit === 'metric' ? 'imperial' : 'metric';\n    setTemperatureUnit(newUnit);\n    localStorage.setItem('temperatureUnit', newUnit);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredCities = cities.filter(city => city.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pogoda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Szukaj miasta...\",\n            value: searchTerm,\n            onChange: handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTemperatureUnit,\n          children: [\"Zmie\\u0144 jednostk\\u0119 temperatury (\", temperatureUnit === 'metric' ? '°C' : '°F', \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Wyszukane miasta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: filteredCities.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/weather/${city}`,\n                  children: city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => addFavoriteCity(city),\n                  children: \"Dodaj do ulubionych\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Ulubione miejscowo\\u015Bci\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: favoriteCities.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/weather/${city}`,\n                  children: city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/weather/:city\",\n          element: /*#__PURE__*/_jsxDEV(WeatherDetails, {\n            temperatureUnit: temperatureUnit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"B4asBlVl7gsum6lcFYW3xdJxj9A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","CityList","WeatherDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","cities","setCities","searchTerm","setSearchTerm","temperatureUnit","setTemperatureUnit","localStorage","getItem","favoriteCities","setFavoriteCities","JSON","parse","addFavoriteCity","city","updatedCities","setItem","stringify","toggleTemperatureUnit","newUnit","handleSearchChange","event","target","value","filteredCities","filter","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","path","element","map","index","to","_c","$RefreshReg$"],"sources":["C:/Users/pacan/Desktop/frontend/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport CityList from './components/CityList';\nimport WeatherDetails from './components/WeatherDetails';\n\nconst App = () => {\n  const [cities, setCities] = useState(['Warszawa', 'Kraków', 'Gdańsk', 'Wrocław', 'Poznań']);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [temperatureUnit, setTemperatureUnit] = useState(localStorage.getItem('temperatureUnit') || 'metric');\n  const [favoriteCities, setFavoriteCities] = useState(JSON.parse(localStorage.getItem('favoriteCities')) || []);\n\n  // Funkcja do dodawania ulubionych miast\n  const addFavoriteCity = (city) => {\n    const updatedCities = [...favoriteCities, city];\n    setFavoriteCities(updatedCities);\n    localStorage.setItem('favoriteCities', JSON.stringify(updatedCities));\n  };\n\n  // Funkcja do zmiany jednostek temperatury\n  const toggleTemperatureUnit = () => {\n    const newUnit = temperatureUnit === 'metric' ? 'imperial' : 'metric';\n    setTemperatureUnit(newUnit);\n    localStorage.setItem('temperatureUnit', newUnit);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const filteredCities = cities.filter(city => city.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  return (\n    <Router>\n      <div>\n        <header>\n          <h1>Pogoda</h1>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Szukaj miasta...\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n            />\n          </div>\n          <button onClick={toggleTemperatureUnit}>\n            Zmień jednostkę temperatury ({temperatureUnit === 'metric' ? '°C' : '°F'})\n          </button>\n        </header>\n\n        <Routes>\n          <Route path=\"/\" element={\n            <>\n              <h2>Wyszukane miasta</h2>\n              <ul>\n                {filteredCities.map((city, index) => (\n                  <li key={index}>\n                    <Link to={`/weather/${city}`}>{city}</Link>\n                    <button onClick={() => addFavoriteCity(city)}>Dodaj do ulubionych</button>\n                  </li>\n                ))}\n              </ul>\n              <h3>Ulubione miejscowości</h3>\n              <ul>\n                {favoriteCities.map((city, index) => (\n                  <li key={index}>\n                    <Link to={`/weather/${city}`}>{city}</Link>\n                  </li>\n                ))}\n              </ul>\n            </>\n          } />\n          <Route path=\"/weather/:city\" element={<WeatherDetails temperatureUnit={temperatureUnit} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}