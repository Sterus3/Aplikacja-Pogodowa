{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pacan\\\\Desktop\\\\frontend\\\\weather-app\\\\src\\\\components\\\\CityList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CityList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityList = ({\n  cities\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Funkcja do filtrowania miast na podstawie wprowadzonego tekstu\n  const filteredCities = cities.filter(city => city.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wybierz miasto, aby zobaczy\\u0107 prognoz\\u0119 pogody:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Wyszukaj miasto...\",\n      className: \"search-input\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), searchTerm && filteredCities.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Brak wynik\\xF3w dla \\\"\", searchTerm, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"city-list\",\n      children: filteredCities.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"city-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/weather/${city}`,\n          className: \"city-link\",\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(CityList, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = CityList;\nexport default CityList;\nvar _c;\n$RefreshReg$(_c, \"CityList\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","CityList","cities","_s","searchTerm","setSearchTerm","filteredCities","filter","city","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","index","to","_c","$RefreshReg$"],"sources":["C:/Users/pacan/Desktop/frontend/weather-app/src/components/CityList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CityList.css';\r\n\r\nconst CityList = ({ cities }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Funkcja do filtrowania miast na podstawie wprowadzonego tekstu\r\n  const filteredCities = cities.filter(city =>\r\n    city.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"city-list-container\">\r\n      <h2>Wybierz miasto, aby zobaczyć prognozę pogody:</h2>\r\n      \r\n      {/* Pole wyszukiwania */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Wyszukaj miasto...\"\r\n        className=\"search-input\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      \r\n      {/* Lista miast */}\r\n      {searchTerm && filteredCities.length === 0 ? (\r\n        <p>Brak wyników dla \"{searchTerm}\"</p>\r\n      ) : (\r\n        <ul className=\"city-list\">\r\n          {filteredCities.map((city, index) => (\r\n            <li key={index} className=\"city-item\">\r\n              <Link to={`/weather/${city}`} className=\"city-link\">\r\n                {city}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMS,cAAc,GAAGJ,MAAM,CAACK,MAAM,CAACC,IAAI,IACvCA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,UAAU,CAACK,WAAW,CAAC,CAAC,CACtD,CAAC;EAED,oBACET,OAAA;IAAKW,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCZ,OAAA;MAAAY,QAAA,EAAI;IAA6C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGtDhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCP,SAAS,EAAC,cAAc;MACxBQ,KAAK,EAAEf,UAAW;MAClBgB,QAAQ,EAAGC,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EAGDZ,UAAU,IAAIE,cAAc,CAACiB,MAAM,KAAK,CAAC,gBACxCvB,OAAA;MAAAY,QAAA,GAAG,wBAAkB,EAACR,UAAU,EAAC,IAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtChB,OAAA;MAAIW,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBN,cAAc,CAACkB,GAAG,CAAC,CAAChB,IAAI,EAAEiB,KAAK,kBAC9BzB,OAAA;QAAgBW,SAAS,EAAC,WAAW;QAAAC,QAAA,eACnCZ,OAAA,CAACF,IAAI;UAAC4B,EAAE,EAAE,YAAYlB,IAAI,EAAG;UAACG,SAAS,EAAC,WAAW;UAAAC,QAAA,EAChDJ;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC,GAHAS,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CArCIF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}