{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pacan\\\\Desktop\\\\frontend\\\\weather-app\\\\src\\\\components\\\\WeatherDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDetails = () => {\n  _s();\n  const {\n    city\n  } = useParams(); // Odczytujemy nazwę miasta z URL\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const response = await axios.get(\"https://api.openweathermap.org/data/2.5/weather\", {\n          params: {\n            q: `${city},PL`,\n            // Miasto z parametru URL\n            appid: process.env.REACT_APP_WEATHER_API_KEY,\n            units: \"metric\",\n            // Jednostki metryczne\n            lang: \"pl\" // Język polski\n          }\n        });\n        setWeather(response.data); // Ustaw dane w stanie\n      } catch (error) {\n        setError(\"Błąd pobierania danych pogodowych.\");\n      }\n    };\n    fetchWeather();\n  }, [city]); // Przeładowujemy zapytanie, gdy zmieni się miasto\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (!weather) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0141adowanie danych...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Pogoda w \", weather.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperatura: \", weather.main.temp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Warunki: \", weather.weather[0].description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wiatr: \", weather.wind.speed, \" m/s, kierunek \", weather.wind.deg, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Stopie\\u0144 zachmurzenia: \", weather.clouds.all, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherDetails, \"rVIfZD705ISiolaBvYC9y9rqViA=\", false, function () {\n  return [useParams];\n});\n_c = WeatherDetails;\nexport default WeatherDetails;\nvar _c;\n$RefreshReg$(_c, \"WeatherDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","WeatherDetails","_s","city","weather","setWeather","error","setError","fetchWeather","response","get","params","q","appid","process","env","REACT_APP_WEATHER_API_KEY","units","lang","data","children","fileName","_jsxFileName","lineNumber","columnNumber","name","main","temp","description","wind","speed","deg","clouds","all","_c","$RefreshReg$"],"sources":["C:/Users/pacan/Desktop/frontend/weather-app/src/components/WeatherDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst WeatherDetails = () => {\r\n  const { city } = useParams(); // Odczytujemy nazwę miasta z URL\r\n  const [weather, setWeather] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://api.openweathermap.org/data/2.5/weather\", {\r\n          params: {\r\n            q: `${city},PL`, // Miasto z parametru URL\r\n            appid: process.env.REACT_APP_WEATHER_API_KEY,\r\n            units: \"metric\", // Jednostki metryczne\r\n            lang: \"pl\", // Język polski\r\n          },\r\n        });\r\n\r\n        setWeather(response.data); // Ustaw dane w stanie\r\n      } catch (error) {\r\n        setError(\"Błąd pobierania danych pogodowych.\");\r\n      }\r\n    };\r\n\r\n    fetchWeather();\r\n  }, [city]); // Przeładowujemy zapytanie, gdy zmieni się miasto\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  if (!weather) {\r\n    return <p>Ładowanie danych...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Pogoda w {weather.name}</h1>\r\n      <p>Temperatura: {weather.main.temp}°C</p>\r\n      <p>Warunki: {weather.weather[0].description}</p>\r\n      <p>Wiatr: {weather.wind.speed} m/s, kierunek {weather.wind.deg}°</p>\r\n      <p>Stopień zachmurzenia: {weather.clouds.all}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}