{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pacan\\\\Desktop\\\\frontend\\\\weather-app\\\\src\\\\components\\\\WeatherDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDetails = () => {\n  _s();\n  const {\n    city\n  } = useParams(); // Odczytujemy nazwę miasta z URL\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        // Pobieranie bieżącej pogody\n        const weatherResponse = await axios.get(\"https://api.openweathermap.org/data/2.5/weather\", {\n          params: {\n            q: `${city},PL`,\n            // Miasto z parametru URL\n            appid: process.env.REACT_APP_WEATHER_API_KEY,\n            units: \"metric\",\n            // Jednostki metryczne\n            lang: \"pl\" // Język polski\n          }\n        });\n        setWeather(weatherResponse.data); // Ustawienie bieżącej pogody\n\n        // Pobieranie prognozy na najbliższe 5 dni\n        const forecastResponse = await axios.get(\"https://api.openweathermap.org/data/2.5/forecast\", {\n          params: {\n            q: `${city},PL`,\n            appid: process.env.REACT_APP_WEATHER_API_KEY,\n            units: \"metric\",\n            lang: \"pl\"\n          }\n        });\n        setForecast(forecastResponse.data); // Ustawienie prognozy na 5 dni\n      } catch (error) {\n        setError(\"Błąd pobierania danych pogodowych.\");\n      }\n    };\n    fetchWeather();\n  }, [city]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  if (!weather || !forecast) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0141adowanie danych...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  const weatherIcon = `http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`;\n\n  // Wybieranie prognozy na 12:00 każdego dnia z prognozy co 3 godziny\n  const dailyForecast = forecast.list.filter(forecastItem => {\n    const date = new Date(forecastItem.dt * 1000);\n    return date.getHours() === 12; // Wybieramy prognozę na 12:00\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Pogoda w \", weather.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperatura: \", weather.main.temp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Warunki: \", weather.weather[0].description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: weatherIcon,\n      alt: weather.weather[0].description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wiatr: \", weather.wind.speed, \" m/s, kierunek \", weather.wind.deg, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Stopie\\u0144 zachmurzenia: \", weather.clouds.all, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prognoza na najbli\\u017Csze 5 dni\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dailyForecast.map((forecastItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: new Date(forecastItem.dt * 1000).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperatura: \", forecastItem.main.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Warunki: \", forecastItem.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${forecastItem.weather[0].icon}.png`,\n          alt: forecastItem.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Przewidywana ilo\\u015B\\u0107 opad\\xF3w: \", forecastItem.rain ? forecastItem.rain[\"3h\"] : 0, \" mm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Prawdopodobie\\u0144stwo opad\\xF3w: \", forecastItem.pop * 100, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherDetails, \"w0NKY7kVD55MljDbu6mjH0AyD1k=\", false, function () {\n  return [useParams];\n});\n_c = WeatherDetails;\nexport default WeatherDetails;\nvar _c;\n$RefreshReg$(_c, \"WeatherDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","WeatherDetails","_s","city","weather","setWeather","forecast","setForecast","error","setError","fetchWeather","weatherResponse","get","params","q","appid","process","env","REACT_APP_WEATHER_API_KEY","units","lang","data","forecastResponse","children","fileName","_jsxFileName","lineNumber","columnNumber","weatherIcon","icon","dailyForecast","list","filter","forecastItem","date","Date","dt","getHours","name","main","temp","description","src","alt","wind","speed","deg","clouds","all","map","index","toLocaleDateString","rain","pop","_c","$RefreshReg$"],"sources":["C:/Users/pacan/Desktop/frontend/weather-app/src/components/WeatherDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst WeatherDetails = () => {\r\n  const { city } = useParams(); // Odczytujemy nazwę miasta z URL\r\n  const [weather, setWeather] = useState(null);\r\n  const [forecast, setForecast] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      try {\r\n        // Pobieranie bieżącej pogody\r\n        const weatherResponse = await axios.get(\"https://api.openweathermap.org/data/2.5/weather\", {\r\n          params: {\r\n            q: `${city},PL`, // Miasto z parametru URL\r\n            appid: process.env.REACT_APP_WEATHER_API_KEY,\r\n            units: \"metric\", // Jednostki metryczne\r\n            lang: \"pl\", // Język polski\r\n          },\r\n        });\r\n\r\n        setWeather(weatherResponse.data); // Ustawienie bieżącej pogody\r\n\r\n        // Pobieranie prognozy na najbliższe 5 dni\r\n        const forecastResponse = await axios.get(\"https://api.openweathermap.org/data/2.5/forecast\", {\r\n          params: {\r\n            q: `${city},PL`,\r\n            appid: process.env.REACT_APP_WEATHER_API_KEY,\r\n            units: \"metric\",\r\n            lang: \"pl\",\r\n          },\r\n        });\r\n\r\n        setForecast(forecastResponse.data); // Ustawienie prognozy na 5 dni\r\n      } catch (error) {\r\n        setError(\"Błąd pobierania danych pogodowych.\");\r\n      }\r\n    };\r\n\r\n    fetchWeather();\r\n  }, [city]);\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  if (!weather || !forecast) {\r\n    return <p>Ładowanie danych...</p>;\r\n  }\r\n\r\n  const weatherIcon = `http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`;\r\n\r\n  // Wybieranie prognozy na 12:00 każdego dnia z prognozy co 3 godziny\r\n  const dailyForecast = forecast.list.filter(forecastItem => {\r\n    const date = new Date(forecastItem.dt * 1000);\r\n    return date.getHours() === 12; // Wybieramy prognozę na 12:00\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Pogoda w {weather.name}</h1>\r\n      <p>Temperatura: {weather.main.temp}°C</p>\r\n      <p>Warunki: {weather.weather[0].description}</p>\r\n      <img src={weatherIcon} alt={weather.weather[0].description} />\r\n\r\n      <p>Wiatr: {weather.wind.speed} m/s, kierunek {weather.wind.deg}°</p>\r\n      <p>Stopień zachmurzenia: {weather.clouds.all}%</p>\r\n\r\n      <h2>Prognoza na najbliższe 5 dni</h2>\r\n      <div>\r\n        {dailyForecast.map((forecastItem, index) => (\r\n          <div key={index}>\r\n            <h3>{new Date(forecastItem.dt * 1000).toLocaleDateString()}</h3>\r\n            <p>Temperatura: {forecastItem.main.temp}°C</p>\r\n            <p>Warunki: {forecastItem.weather[0].description}</p>\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${forecastItem.weather[0].icon}.png`}\r\n              alt={forecastItem.weather[0].description}\r\n            />\r\n            <p>Przewidywana ilość opadów: {forecastItem.rain ? forecastItem.rain[\"3h\"] : 0} mm</p>\r\n            <p>Prawdopodobieństwo opadów: {forecastItem.pop * 100}%</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}