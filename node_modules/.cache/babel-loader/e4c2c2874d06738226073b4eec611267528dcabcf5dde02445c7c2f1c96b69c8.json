{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pacan\\\\Desktop\\\\frontend\\\\weather-app\\\\src\\\\components\\\\WeatherDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchWeatherData } from '../api';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDetails = ({\n  city\n}) => {\n  _s();\n  const unit = useSelector(state => state.unit);\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const getWeather = async () => {\n      const data = await fetchWeatherData(city, unit);\n      setWeather(data);\n    };\n    getWeather();\n  }, [city, unit]);\n  if (!weather) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie pogody...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Pogoda w \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperatura: \", weather.list[0].main.temp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherDetails, \"wATij4HMu7qQYmG52RsFsJGjk/8=\", false, function () {\n  return [useSelector];\n});\n_c = WeatherDetails;\nexport default WeatherDetails;\nvar _c;\n$RefreshReg$(_c, \"WeatherDetails\");","map":{"version":3,"names":["React","useState","useEffect","fetchWeatherData","useSelector","jsxDEV","_jsxDEV","WeatherDetails","city","_s","unit","state","weather","setWeather","getWeather","data","children","fileName","_jsxFileName","lineNumber","columnNumber","list","main","temp","_c","$RefreshReg$"],"sources":["C:/Users/pacan/Desktop/frontend/weather-app/src/components/WeatherDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchWeatherData } from '../api';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WeatherDetails = ({ city }) => {\r\n  const unit = useSelector(state => state.unit);\r\n  const [weather, setWeather] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getWeather = async () => {\r\n      const data = await fetchWeatherData(city, unit);\r\n      setWeather(data);\r\n    };\r\n    getWeather();\r\n  }, [city, unit]);\r\n\r\n  if (!weather) return <div>Ładowanie pogody...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Pogoda w {city}</h1>\r\n      <p>Temperatura: {weather.list[0].main.temp}°C</p>\r\n      {/* Dodaj inne szczegóły */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,QAAQ;AACzC,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAI,CAAC;EAC7C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,IAAI,GAAG,MAAMZ,gBAAgB,CAACK,IAAI,EAAEE,IAAI,CAAC;MAC/CG,UAAU,CAACE,IAAI,CAAC;IAClB,CAAC;IACDD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACN,IAAI,EAAEE,IAAI,CAAC,CAAC;EAEhB,IAAI,CAACE,OAAO,EAAE,oBAAON,OAAA;IAAAU,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEnD,oBACEd,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,GAAI,WAAS,EAACR,IAAI;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBd,OAAA;MAAAU,QAAA,GAAG,eAAa,EAACJ,OAAO,CAACS,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,EAAC,OAAE;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9C,CAAC;AAEV,CAAC;AAACX,EAAA,CArBIF,cAAc;EAAA,QACLH,WAAW;AAAA;AAAAoB,EAAA,GADpBjB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}