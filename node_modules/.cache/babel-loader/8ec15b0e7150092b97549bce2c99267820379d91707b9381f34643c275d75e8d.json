{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pacan\\\\Desktop\\\\frontend\\\\weather-app\\\\src\\\\components\\\\CityList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityList = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [favoriteCities, setFavoriteCities] = useState(() => {\n    // Pobierz ulubione miasta z localStorage\n    const savedFavorites = localStorage.getItem('favoriteCities');\n    return savedFavorites ? JSON.parse(savedFavorites) : [];\n  });\n  const [cities] = useState(['Warszawa', 'Kraków', 'Gdańsk', 'Wrocław', 'Poznań']); // Lista miast\n\n  // Funkcja do obsługi zmiany wyszukiwania\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  // Funkcja do dodawania/usuń ulubione miasto\n  const toggleFavoriteCity = city => {\n    const updatedFavorites = favoriteCities.includes(city) ? favoriteCities.filter(item => item !== city) : [...favoriteCities, city];\n    setFavoriteCities(updatedFavorites);\n    localStorage.setItem('favoriteCities', JSON.stringify(updatedFavorites)); // Zapisz w localStorage\n  };\n  const filteredCities = cities.filter(city => city.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wybierz miasto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: handleSearchChange,\n      placeholder: \"Szukaj miasta...\",\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredCities.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/weather/${city}`,\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleFavoriteCity(city),\n          style: {\n            backgroundColor: favoriteCities.includes(city) ? 'green' : 'gray'\n          },\n          children: favoriteCities.includes(city) ? 'Usuń z ulubionych' : 'Dodaj do ulubionych'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, city, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CityList, \"trC542Oln6qPnDD2/yCg1DOuWxw=\");\n_c = CityList;\nexport default CityList;\nvar _c;\n$RefreshReg$(_c, \"CityList\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","CityList","_s","searchQuery","setSearchQuery","favoriteCities","setFavoriteCities","savedFavorites","localStorage","getItem","JSON","parse","cities","handleSearchChange","event","target","value","toggleFavoriteCity","city","updatedFavorites","includes","filter","item","setItem","stringify","filteredCities","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","to","onClick","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/pacan/Desktop/frontend/weather-app/src/components/CityList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CityList = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [favoriteCities, setFavoriteCities] = useState(() => {\r\n    // Pobierz ulubione miasta z localStorage\r\n    const savedFavorites = localStorage.getItem('favoriteCities');\r\n    return savedFavorites ? JSON.parse(savedFavorites) : [];\r\n  });\r\n\r\n  const [cities] = useState(['Warszawa', 'Kraków', 'Gdańsk', 'Wrocław', 'Poznań']); // Lista miast\r\n\r\n  // Funkcja do obsługi zmiany wyszukiwania\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  // Funkcja do dodawania/usuń ulubione miasto\r\n  const toggleFavoriteCity = (city) => {\r\n    const updatedFavorites = favoriteCities.includes(city)\r\n      ? favoriteCities.filter((item) => item !== city)\r\n      : [...favoriteCities, city];\r\n\r\n    setFavoriteCities(updatedFavorites);\r\n    localStorage.setItem('favoriteCities', JSON.stringify(updatedFavorites)); // Zapisz w localStorage\r\n  };\r\n\r\n  const filteredCities = cities.filter((city) =>\r\n    city.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"city-list\">\r\n      <h1>Wybierz miasto</h1>\r\n      \r\n      {/* Formularz wyszukiwania */}\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={handleSearchChange}\r\n        placeholder=\"Szukaj miasta...\"\r\n        className=\"search-input\"\r\n      />\r\n\r\n      {/* Lista miast */}\r\n      <ul>\r\n        {filteredCities.map((city) => (\r\n          <li key={city}>\r\n            <Link to={`/weather/${city}`}>{city}</Link>\r\n            <button\r\n              onClick={() => toggleFavoriteCity(city)}\r\n              style={{\r\n                backgroundColor: favoriteCities.includes(city) ? 'green' : 'gray',\r\n              }}\r\n            >\r\n              {favoriteCities.includes(city) ? 'Usuń z ulubionych' : 'Dodaj do ulubionych'}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}