{"ast":null,"code":"import axios from'axios';const API_KEY=process.env.REACT_APP_WEATHER_API_KEY;export const fetchWeatherData=async function(city){let unit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'metric';const response=await axios.get('https://api.openweathermap.org/data/2.5/forecast',{params:{q:city,appid:API_KEY,units:unit,lang:'pl'}});return response.data;};","map":{"version":3,"names":["axios","API_KEY","process","env","REACT_APP_WEATHER_API_KEY","fetchWeatherData","city","unit","arguments","length","undefined","response","get","params","q","appid","units","lang","data"],"sources":["C:/Users/pacan/Desktop/frontend/weather-app/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\nexport const fetchWeatherData = async (city, unit = 'metric') => {\r\n  const response = await axios.get('https://api.openweathermap.org/data/2.5/forecast', {\r\n    params: {\r\n      q: city,\r\n      appid: API_KEY,\r\n      units: unit,\r\n      lang: 'pl',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,CAErD,MAAO,MAAM,CAAAC,gBAAgB,CAAG,cAAAA,CAAOC,IAAI,CAAsB,IAApB,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,QAAQ,CAC1D,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAC,kDAAkD,CAAE,CACnFC,MAAM,CAAE,CACNC,CAAC,CAAER,IAAI,CACPS,KAAK,CAAEd,OAAO,CACde,KAAK,CAAET,IAAI,CACXU,IAAI,CAAE,IACR,CACF,CAAC,CAAC,CACF,MAAO,CAAAN,QAAQ,CAACO,IAAI,CACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}